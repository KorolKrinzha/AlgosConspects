# Задачи на использование структур данных

## Палиндром

Дана строка, состоящая из строчных латинских букв и цифр.
Определить, является ли данная строка палиндромом.

Идея: реализовать стэк, заполнить его первой половиной слова.
Будем поочередно вынимать из стека элементы, попутно сравнивая со второй половиной.
Два элементы как бы должны "ничтожаться" друг друга до пустой строки.
Если элементы не равны, то слово не является палиндромом.

```java
class Solution {
    public boolean isPalindrome(String s) {
        // Удаление пробелов и перевод к нижнему регистру
        s = s.replaceAll("\\s+", "").toLowerCase();
        // Создание стека
        Stack<Character> stack = new Stack<>();
        // Заполнение стека символами строки до ее середины
        for (int i = 0; i < s.length() / 2; i++) {
            stack.push(s.charAt(i));
        }
        // Проверка символов оставшейся половины строки на равенство с символами в стеке
        for (int i = (s.length() + 1) / 2; i < s.length(); i++) {
            if (s.charAt(i) != stack.pop()) {
                return false;
            }
        }
        // Строка является палиндромом
        return true;
    }
}

```

## Окно минимума 
Рассмотрим последовательность целых чисел длины N. 
По ней с шагом 1 двигается “окно” длины K,
то есть сначала в “окне” видно первые K чисел,
на следующем шаге в “окне” уже будут находиться K чисел, начиная со второго,
и так далее до конца последовательности.
Требуется для каждого положения “окна” определить минимум в нём.


Идея: реализовать дэк